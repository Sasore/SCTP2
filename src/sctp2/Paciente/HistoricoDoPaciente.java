/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sctp2.Paciente;

import java.awt.Color;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import sctp2.SCTP2;

/**
 *
 * @author Adriano Local
 */
public class HistoricoDoPaciente extends javax.swing.JFrame {

    ArrayList<sctp2.Paciente.HistoricoPaciente> ListarPesquisa;
    ArrayList<HistoricoDetratamentos> ListarTratamentos;
    private String rg;

    /**
     * Creates new form HistoricoDoPaciente
     */
    public HistoricoDoPaciente(int codigoPaciente, String rg) throws ClassNotFoundException, SQLException {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);//inicia a janela maximizada
        this.rg=rg;
        PesquisaPaciente();
        PesquisaHistorico(codigoPaciente, rg);
        

    }

    private HistoricoDoPaciente() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);//inicia a janela maximizada

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jNotificacao = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jQueixaPrincipal = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        jResponsavel = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jFimtratamento = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Histórico do paciente");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Histórico de tratamento do paciente");

        jTable1.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Período do Tratamento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tratamentos realizados"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jNotificacao.setEditable(false);
        jNotificacao.setBackground(new java.awt.Color(255, 255, 255));
        jNotificacao.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jNotificacao.setForeground(new java.awt.Color(51, 51, 145));
        jNotificacao.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 255), 1, true));

        jQueixaPrincipal.setEditable(false);
        jScrollPane2.setViewportView(jQueixaPrincipal);

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Principal Queixa:");

        jResponsavel.setEditable(false);

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Fim tratamento: ");

        jNome.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Responsável pelo tratamento:");

        jFimtratamento.setEditable(false);

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Paciente");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFimtratamento, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                                .addComponent(jNome, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFimtratamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(130, Short.MAX_VALUE)
                .addComponent(jNotificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 1107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(jNotificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(51, 102, 255));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setForeground(new java.awt.Color(0, 50, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/left-arrow.png"))); // NOI18N
        jButton1.setText("Voltar");
        jButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 50, 255), 1, true));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/detalhes.png"))); // NOI18N
        jMenu1.setText("Menu");

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/house pequena.png"))); // NOI18N
        jMenuItem1.setText("Menu principal");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/fechar.png"))); // NOI18N
        jMenuItem2.setText("Sair");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        new sctp2.Principal.principal().setVisible(true);        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        try {
            new sctp2.Paciente.DadosDoPaciente(rg).setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(HistoricoDoPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int linha = jTable1.getSelectedRow();
//        String iniciotratamento = new SimpleDateFormat("dd/MM/yyyy").format(ListarPesquisa.get(linha).getIniciotratamento());
        String fimtratamento = new SimpleDateFormat("dd/MM/yyyy").format(ListarTratamentos.get(linha).getFimTratamento());
        //jInicioTratamento.setText(iniciotratamento);
//        jFimtratamento.setText(fimtratamento);
//        jResponsavel.setText(ListarPesquisa.get(linha).getResponsaveltratamento());
//        jQueixaPrincipal.setText(ListarPesquisa.get(linha).getQueixa());
        LimpaTabela();//limpa a tabela de tratamentos
//        //---------------------------Lista os tratamentos-------------------------------------------------------------------
        int[] tratamento = new int[27];
        System.out.println("linha: " + linha);
        jQueixaPrincipal.setText(ListarTratamentos.get(linha).getQueixa());
        jFimtratamento.setText(ListarTratamentos.get(linha).getFimTratamento().toString());
        jResponsavel.setText(ListarTratamentos.get(linha).getResponsavelPeloTratamento());
        tratamento[0] = ListarTratamentos.get(linha).getProfilaxiaSimples();
        tratamento[1] = ListarTratamentos.get(linha).getRaspagemEPoliCCoronario();
        tratamento[2] = ListarTratamentos.get(linha).getCirugiaPeridontal();
        tratamento[3] = ListarTratamentos.get(linha).getExodontiaSimples();
        tratamento[4] = ListarTratamentos.get(linha).getExodontia3Molar();
        tratamento[5] = ListarTratamentos.get(linha).getExodontiaIncluso();
        tratamento[6] = ListarTratamentos.get(linha).getAmalgama();
        tratamento[7] = ListarTratamentos.get(linha).getResina();
        tratamento[8] = ListarTratamentos.get(linha).getRmf();
        tratamento[9] = ListarTratamentos.get(linha).getEndontiaUnirradicular();
        tratamento[10] = ListarTratamentos.get(linha).getEndodontiaTrirradicular();
        tratamento[11] = ListarTratamentos.get(linha).getCoroaTotal();
        tratamento[12] = ListarTratamentos.get(linha).getPonteFixa3Elementos();
        tratamento[13] = ListarTratamentos.get(linha).getPonteFixa4Elementos();
        tratamento[14] = ListarTratamentos.get(linha).getPonteFixaMaisQue4Elementos();
        tratamento[15] = ListarTratamentos.get(linha).getPpr();
        tratamento[16] = ListarTratamentos.get(linha).getProtesetotal();
        tratamento[17] = ListarTratamentos.get(linha).getProtese_ppr();
        tratamento[18] = ListarTratamentos.get(linha).getProtese();
        tratamento[19] = ListarTratamentos.get(linha).getTerrapiaOeriodDeSuporte();
        tratamento[20] = ListarTratamentos.get(linha).getEndodontiaBirradicular();
        tratamento[21] = ListarTratamentos.get(linha).getDtm();
        tratamento[22] = ListarTratamentos.get(linha).getEstomatologia();
        tratamento[23] = ListarTratamentos.get(linha).getPonteFixa();
        tratamento[24] = ListarTratamentos.get(linha).getPonteFixaMaisQueTresElementos();
        tratamento[25] = ListarTratamentos.get(linha).getRaspagemSub();
        tratamento[26] = ListarTratamentos.get(linha).getRaspagemSupra();

        DefaultTableModel valor = (DefaultTableModel) jTable2.getModel();//criando a chave valor para o objeto tabela
        if (tratamento[0] == 1) {
            valor.addRow((new String[]{"Profilaxia Simples"}));
        }
        if (tratamento[1] == 1) {
            valor.addRow((new String[]{"Raspagem e Poli. Coronário "}));
        }
        if (tratamento[2] == 1) {
            valor.addRow((new String[]{"Cirugia Peridontal "}));
        }
        if (tratamento[3] == 1) {
            valor.addRow((new String[]{"Exodontia Simples"}));
        }
        if (tratamento[4] == 1) {
            valor.addRow((new String[]{"Exodontia 3º Molar"}));
        }
        if (tratamento[5] == 1) {
            valor.addRow((new String[]{"Exodontia Incluso"}));
        }
        if (tratamento[6] == 1) {
            valor.addRow((new String[]{"Amalgama "}));
        }
        if (tratamento[7] == 1) {
            valor.addRow((new String[]{"Resina "}));
        }
        if (tratamento[8] == 1) {
            valor.addRow((new String[]{"RMF"}));
        }
        if (tratamento[9] == 1) {
            valor.addRow((new String[]{"EndontiaUnirradicular e birradicular"}));
        }
        if (tratamento[10] == 1) {
            valor.addRow((new String[]{"Endodontia Trirradicular"}));
        }
        if (tratamento[11] == 1) {
            valor.addRow((new String[]{"Coroa Total"}));
        }
        if (tratamento[12] == 1) {
            valor.addRow((new String[]{"PonteFixa 3 Elementos"}));
        }
        if (tratamento[13] == 1) {
            valor.addRow((new String[]{"PonteFixa 4 Elementos "}));
        }
        if (tratamento[14] == 1) {
            valor.addRow((new String[]{"PonteFixaMaisQue 4 Elementos "}));
        }
        if (tratamento[15] == 1) {
            valor.addRow((new String[]{"PPR "}));
        }
        if (tratamento[16] == 1) {
            valor.addRow((new String[]{"Protese total "}));
        }
        if (tratamento[17] == 1) {
            valor.addRow((new String[]{"Protese PPR "}));
        }
        if (tratamento[18] == 1) {
            valor.addRow((new String[]{"Protese "}));
        }
        if (tratamento[19] == 1) {
            valor.addRow((new String[]{"Terapia Periodontal "}));
        }
        if (tratamento[20] == 1) {
            valor.addRow((new String[]{" Endodontia Birradicular "}));
        }
        if (tratamento[21] == 1) {
            valor.addRow((new String[]{"DTM "}));
        }
        if (tratamento[22] == 1) {
            valor.addRow((new String[]{"Estomatologia"}));
        }
        if (tratamento[23] == 1) {
            valor.addRow((new String[]{"Ponte fixa"}));
        }
        if (tratamento[24] == 1) {
            valor.addRow((new String[]{"Ponte fixa mais que três elementos"}));
        }
        if (tratamento[25] == 1) {
            valor.addRow((new String[]{"Raspagem Sub"}));
        }
        if (tratamento[26] == 1) {
            valor.addRow((new String[]{"Raspagem Supra"}));
        }
//----------------------------------------------------------------------------------------------

    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HistoricoDoPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HistoricoDoPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HistoricoDoPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HistoricoDoPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HistoricoDoPaciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JTextField jFimtratamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JTextField jNome;
    private javax.swing.JTextField jNotificacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextPane jQueixaPrincipal;
    private javax.swing.JTextField jResponsavel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables

    private void PesquisaHistorico(int codigoPaciente, String rg) throws ClassNotFoundException, SQLException {
        //--------------------------------------------------
        sctp2.BancodeDados.conexao acesso = new sctp2.BancodeDados.conexao();
        DefaultTableModel valor = (DefaultTableModel) jTable1.getModel();//criando a chave valor para o objeto tabela
        //--------------------------------------------------
        ListarPesquisa = acesso.PesquisarHistórico(codigoPaciente);
        ListarTratamentos = acesso.PesquisarHistóricoTratamentos(rg);
        if(!ListarPesquisa.isEmpty())  jNome.setText(ListarPesquisa.get(0).getNomepaciente());
        //-----------------------------------------------

        //-----------------------------------------------
        if (ListarTratamentos.size() == 0) {
            jNotificacao.setText("Não há histórico para este usuário!");
        } else {


            for (int i = 0; i < ListarTratamentos.size(); i++) {
                //String iniciotratamento = new SimpleDateFormat("dd/MM/yyyy").format(ListarPesquisa.get(i).getIniciotratamento());
                String fimtratamento = new SimpleDateFormat("dd/MM/yyyy").format(ListarTratamentos.get(i).getFimTratamento());
                valor.addRow((new String[]{fimtratamento}));
            }
            jNotificacao.setText("Clique na data do tratamento na tabela 'Período do Tratamento' para ver os detalhes!");
        }
    }

    private void LimpaTabela() {
        //limpa pesquisas existentes
        jTable2.setSelectionBackground(Color.BLUE);//defini a cor de seleção da tabela para azul
        DefaultTableModel tabela;
        tabela = (DefaultTableModel) jTable2.getModel();
        tabela.setNumRows(0);
        //********************************************
    }

    private void PesquisaPaciente() throws ClassNotFoundException {
    sctp2.BancodeDados.conexao acesso = new sctp2.BancodeDados.conexao();
    ArrayList<sctp2.Pesquisar.Pesquisar> ListaPesquisa;
    ListaPesquisa=acesso.PesquisarPorPacientePorCPFRG(rg);
    jNome.setText(ListaPesquisa.get(0).getNome());
    }
}
