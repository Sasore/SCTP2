/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sctp2.NovoTratamento;

import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Adriano
 */
public class Anamnese extends javax.swing.JFrame {

    /**
     * Creates new form Anamnese
     */
    private int tamanhoFonte=15;//DEFINE O TAMANHO DA FONTE DESTA TELA
    private String rg;
    public Anamnese() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);//inicia a janela maximizada
        DesabilitaCampos();
        TamanhoDaFonte(tamanhoFonte);//função que aumenta/diminui o tamanho da fonte da tela

    }
    public Anamnese(String rg) throws ClassNotFoundException, SQLException {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);//inicia a janela maximizada
        DesabilitaCampos();
        TamanhoDaFonte(tamanhoFonte);//função que aumenta/diminui o tamanho da fonte da tela
        this.rg=rg;
        ExibeAnamnese();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPrincipalQueixa = new javax.swing.JTextPane();
        jLabel3 = new javax.swing.JLabel();
        jCSofredoenca = new javax.swing.JCheckBox();
        jCEmtratamentoMedico = new javax.swing.JCheckBox();
        jCUsodeMedicacao = new javax.swing.JCheckBox();
        jCPossuiAlergias = new javax.swing.JCheckBox();
        jCJafoiOperado = new javax.swing.JCheckBox();
        jCProblemasComHemorragia = new javax.swing.JCheckBox();
        jProblemasComCicatrizacao = new javax.swing.JCheckBox();
        jprobelmasComAnestesia = new javax.swing.JCheckBox();
        jgravidez = new javax.swing.JCheckBox();
        jTSofreAlgumaDoencaDescricao = new javax.swing.JTextField();
        jEmtratamentoMedicoDescricao = new javax.swing.JTextField();
        jUsodeMedicacaoDescricao = new javax.swing.JTextField();
        jPossuiAlergiaDescricao = new javax.swing.JTextField();
        jJaFoiOperadoDescricao = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jBAumentaTamFOnte = new javax.swing.JButton();
        jBDiminuiTamFOnte = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro Anamnese");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Questionário de Saúde");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Principal queixa");

        jScrollPane1.setViewportView(jPrincipalQueixa);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Preencha no campos de texto a descrição do problema");

        jCSofredoenca.setText("Sofre alguma doença");
        jCSofredoenca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCSofredoencaMouseClicked(evt);
            }
        });
        jCSofredoenca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCSofredoencaActionPerformed(evt);
            }
        });

        jCEmtratamentoMedico.setText("Em tratamento médico");
        jCEmtratamentoMedico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCEmtratamentoMedicoMouseClicked(evt);
            }
        });
        jCEmtratamentoMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCEmtratamentoMedicoActionPerformed(evt);
            }
        });

        jCUsodeMedicacao.setText("Uso de alguma medicação?");
        jCUsodeMedicacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCUsodeMedicacaoMouseClicked(evt);
            }
        });
        jCUsodeMedicacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCUsodeMedicacaoActionPerformed(evt);
            }
        });

        jCPossuiAlergias.setText("Possui alergias?");
        jCPossuiAlergias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCPossuiAlergiasMouseClicked(evt);
            }
        });
        jCPossuiAlergias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCPossuiAlergiasActionPerformed(evt);
            }
        });

        jCJafoiOperado.setText("Já foi Operado?");
        jCJafoiOperado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCJafoiOperadoMouseClicked(evt);
            }
        });
        jCJafoiOperado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCJafoiOperadoActionPerformed(evt);
            }
        });

        jCProblemasComHemorragia.setText("Problemas com Hemorragia");

        jProblemasComCicatrizacao.setText("Problemas com Cicatrização");

        jprobelmasComAnestesia.setText("Problemas com Anestesia");

        jgravidez.setText("gravidez");

        jTSofreAlgumaDoencaDescricao.setBackground(new java.awt.Color(204, 204, 204));

        jEmtratamentoMedicoDescricao.setBackground(new java.awt.Color(204, 204, 204));

        jUsodeMedicacaoDescricao.setBackground(new java.awt.Color(204, 204, 204));

        jPossuiAlergiaDescricao.setBackground(new java.awt.Color(204, 204, 204));

        jJaFoiOperadoDescricao.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jCUsodeMedicacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jCSofredoenca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jCEmtratamentoMedico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jCPossuiAlergias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jCJafoiOperado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jEmtratamentoMedicoDescricao, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                                    .addComponent(jTSofreAlgumaDoencaDescricao)
                                    .addComponent(jUsodeMedicacaoDescricao)
                                    .addComponent(jPossuiAlergiaDescricao)
                                    .addComponent(jJaFoiOperadoDescricao))
                                .addGap(78, 78, 78)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jprobelmasComAnestesia)
                                    .addComponent(jCProblemasComHemorragia)
                                    .addComponent(jgravidez)
                                    .addComponent(jProblemasComCicatrizacao)))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCSofredoenca)
                            .addComponent(jTSofreAlgumaDoencaDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jProblemasComCicatrizacao))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCEmtratamentoMedico)
                            .addComponent(jEmtratamentoMedicoDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jgravidez))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jPossuiAlergiaDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCProblemasComHemorragia))
                                .addGap(16, 16, 16)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jCJafoiOperado)
                                    .addComponent(jJaFoiOperadoDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jCUsodeMedicacao)
                                    .addComponent(jUsodeMedicacaoDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jprobelmasComAnestesia))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCPossuiAlergias))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(51, 102, 255));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setForeground(new java.awt.Color(0, 51, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/left-arrow.png"))); // NOI18N
        jButton1.setText("Voltar");
        jButton1.setToolTipText("Tela anterior");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setForeground(new java.awt.Color(0, 51, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/exit.png"))); // NOI18N
        jButton2.setText("Cancelar");
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setForeground(new java.awt.Color(0, 51, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/right-arrow.png"))); // NOI18N
        jButton3.setText("Próxima etapa ");
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jBAumentaTamFOnte.setBackground(new java.awt.Color(255, 255, 255));
        jBAumentaTamFOnte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/1467515709_icon-112-search-plus.png"))); // NOI18N
        jBAumentaTamFOnte.setBorder(null);
        jBAumentaTamFOnte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAumentaTamFOnteActionPerformed(evt);
            }
        });

        jBDiminuiTamFOnte.setBackground(new java.awt.Color(255, 255, 255));
        jBDiminuiTamFOnte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/1467516016_icon-113-search-minus.png"))); // NOI18N
        jBDiminuiTamFOnte.setBorder(null);
        jBDiminuiTamFOnte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDiminuiTamFOnteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBAumentaTamFOnte, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBDiminuiTamFOnte, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(263, 263, 263)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBDiminuiTamFOnte, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAumentaTamFOnte, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/detalhes.png"))); // NOI18N
        jMenu1.setText("Menu");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_HOME, 0));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/dente.png"))); // NOI18N
        jMenuItem2.setText("Voltar para o Início");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/cancelar pequeno.png"))); // NOI18N
        jMenuItem3.setText("Sair");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCUsodeMedicacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCUsodeMedicacaoActionPerformed
        if (jCSofredoenca.isSelected() == true) {
            jTSofreAlgumaDoencaDescricao.enable();
            jTSofreAlgumaDoencaDescricao.setBackground(Color.white);
        }
        if (jCSofredoenca.isSelected() == false) {
            jTSofreAlgumaDoencaDescricao.disable();
            jTSofreAlgumaDoencaDescricao.setBackground(Color.GRAY);
        }


    }//GEN-LAST:event_jCUsodeMedicacaoActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        SetValoresAnamnese();//passa os valores para a classe Anamenese
        sctp2.NovoTratamento.TratamentoNecessario acesso = new sctp2.NovoTratamento.TratamentoNecessario(rg);//chama a proxima tela
        this.setVisible(false);
        acesso.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        sctp2.NovoTratamento.Prontuario acesso;
        try {
            acesso = new sctp2.NovoTratamento.Prontuario(rg);
            this.setVisible(false);
            acesso.setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Anamnese.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int retorno;
        retorno = JOptionPane.showConfirmDialog(rootPane, "Tem certeza que deseja Cancelar este cadastro?");
        if (retorno == 0) {
            this.setVisible(false);
            sctp2.Principal.principal acesso = new sctp2.Principal.principal();
            acesso.setVisible(true);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCSofredoencaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCSofredoencaActionPerformed
        if (jCSofredoenca.isSelected() == true) {
            jTSofreAlgumaDoencaDescricao.enable();
            jTSofreAlgumaDoencaDescricao.setBackground(Color.white);
        }
        if (jCSofredoenca.isSelected() == false) {
            jTSofreAlgumaDoencaDescricao.disable();
            jTSofreAlgumaDoencaDescricao.setBackground(Color.GRAY);
        }

    }//GEN-LAST:event_jCSofredoencaActionPerformed

    private void jCSofredoencaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCSofredoencaMouseClicked


    }//GEN-LAST:event_jCSofredoencaMouseClicked

    private void jCEmtratamentoMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCEmtratamentoMedicoActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_jCEmtratamentoMedicoActionPerformed

    private void jCPossuiAlergiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCPossuiAlergiasActionPerformed


    }//GEN-LAST:event_jCPossuiAlergiasActionPerformed

    private void jCJafoiOperadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCJafoiOperadoActionPerformed

    }//GEN-LAST:event_jCJafoiOperadoActionPerformed

    private void jCJafoiOperadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCJafoiOperadoMouseClicked

        if (jCJafoiOperado.isSelected() == true) {
            jJaFoiOperadoDescricao.enable(true);
            jJaFoiOperadoDescricao.setBackground(Color.white);
        }
        if (jCJafoiOperado.isSelected() == false) {
            jJaFoiOperadoDescricao.disable();
            jJaFoiOperadoDescricao.setBackground(Color.GRAY);
        }
    }//GEN-LAST:event_jCJafoiOperadoMouseClicked

    private void jCPossuiAlergiasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCPossuiAlergiasMouseClicked
        if (jCPossuiAlergias.isSelected() == true) {
            jPossuiAlergiaDescricao.enable(true);
            jPossuiAlergiaDescricao.setBackground(Color.white);
        }
        if (jCPossuiAlergias.isSelected() == false) {
            jPossuiAlergiaDescricao.disable();
            jPossuiAlergiaDescricao.setBackground(Color.GRAY);
    }//GEN-LAST:event_jCPossuiAlergiasMouseClicked
    }
    private void jCUsodeMedicacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCUsodeMedicacaoMouseClicked
        if (jCUsodeMedicacao.isSelected() == true) {
            jUsodeMedicacaoDescricao.enable(true);
            jUsodeMedicacaoDescricao.setBackground(Color.white);
        }
        if (jCUsodeMedicacao.isSelected() == false) {
            jUsodeMedicacaoDescricao.disable();
            jUsodeMedicacaoDescricao.setBackground(Color.GRAY);
        }

    }//GEN-LAST:event_jCUsodeMedicacaoMouseClicked

    private void jCEmtratamentoMedicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCEmtratamentoMedicoMouseClicked
        if (jCEmtratamentoMedico.isSelected() == true) {
            jEmtratamentoMedicoDescricao.enable(true);
            jEmtratamentoMedicoDescricao.setBackground(Color.white);
        }
        if (jCEmtratamentoMedico.isSelected() == false) {
            jEmtratamentoMedicoDescricao.disable();
            jEmtratamentoMedicoDescricao.setBackground(Color.GRAY);
        }
    }//GEN-LAST:event_jCEmtratamentoMedicoMouseClicked

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
      this.setVisible(false);
      sctp2.Principal.principal acesso= new sctp2.Principal.principal();
      acesso.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jBAumentaTamFOnteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAumentaTamFOnteActionPerformed
        TamanhoDaFonte(tamanhoFonte+1);        // TODO add your handling code here:
    }//GEN-LAST:event_jBAumentaTamFOnteActionPerformed

    private void jBDiminuiTamFOnteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDiminuiTamFOnteActionPerformed
        TamanhoDaFonte(tamanhoFonte-1);        // TODO add your handling code here:
    }//GEN-LAST:event_jBDiminuiTamFOnteActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Anamnese.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Anamnese.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Anamnese.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Anamnese.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Anamnese().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAumentaTamFOnte;
    private javax.swing.JButton jBDiminuiTamFOnte;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCEmtratamentoMedico;
    private javax.swing.JCheckBox jCJafoiOperado;
    private javax.swing.JCheckBox jCPossuiAlergias;
    private javax.swing.JCheckBox jCProblemasComHemorragia;
    private javax.swing.JCheckBox jCSofredoenca;
    private javax.swing.JCheckBox jCUsodeMedicacao;
    private javax.swing.JTextField jEmtratamentoMedicoDescricao;
    private javax.swing.JTextField jJaFoiOperadoDescricao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jPossuiAlergiaDescricao;
    private javax.swing.JTextPane jPrincipalQueixa;
    private javax.swing.JCheckBox jProblemasComCicatrizacao;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTSofreAlgumaDoencaDescricao;
    private javax.swing.JTextField jUsodeMedicacaoDescricao;
    private javax.swing.JCheckBox jgravidez;
    private javax.swing.JCheckBox jprobelmasComAnestesia;
    // End of variables declaration//GEN-END:variables

    private void SetValoresAnamnese() {
        sctp2.ClassesdeControle.Anamnese acesso = new sctp2.ClassesdeControle.Anamnese();
        acesso.setPrincipalQueixa(jPrincipalQueixa.getText());
        acesso.setSofreAlgumaDoenca(jCSofredoenca.isSelected());
        acesso.setSofreAlgumaDoencaDescricao(jTSofreAlgumaDoencaDescricao.getText());
        acesso.setEmTratamentoMedico(jCEmtratamentoMedico.isSelected());
        acesso.setEmTratamentoMedicoDescricao(jTSofreAlgumaDoencaDescricao.getText());
        acesso.setUsoDeAlgumaMedicacao(jCUsodeMedicacao.isSelected());
        acesso.setUsoDeAlgumaMedicacaoDescricao(jUsodeMedicacaoDescricao.getText());
        acesso.setPossuiAlergias(jCPossuiAlergias.isSelected());
        acesso.setPossuiAlergiasDescricao(jPossuiAlergiaDescricao.getText());
        acesso.setJaFoiOperado(jCJafoiOperado.isSelected());
        acesso.setJaFoiOperadoDescricao(jJaFoiOperadoDescricao.getText());
        acesso.setProblemasComHemorragia(jProblemasComCicatrizacao.isSelected());
        acesso.setProblemasComHemorragia(jCProblemasComHemorragia.isSelected());
        //acesso.setProblemasComHemorragiaDescricao(jProblemasComHemorragiaDescricao.getText());
        acesso.setProblemasComCicatrizacao(jProblemasComCicatrizacao.isSelected());
        acesso.setGravidez(jgravidez.isSelected());
        acesso.setProblemasComAnestesia(jprobelmasComAnestesia.isSelected());
    }

    private void DesabilitaCampos() {
        jJaFoiOperadoDescricao.disable();
        jPossuiAlergiaDescricao.disable();
        jUsodeMedicacaoDescricao.disable();
        jEmtratamentoMedicoDescricao.disable();
        jTSofreAlgumaDoencaDescricao.disable();
    }

    private void HabilitaCampos() {//Esta função habilita todos os campos textfield da interface Anamnese
        jJaFoiOperadoDescricao.enable(true);
        jJaFoiOperadoDescricao.setBackground(Color.white);
        jPossuiAlergiaDescricao.enable(true);
        jPossuiAlergiaDescricao.setBackground(Color.white);
        jUsodeMedicacaoDescricao.enable(true);
        jUsodeMedicacaoDescricao.setBackground(Color.white);
        jEmtratamentoMedicoDescricao.enable(true);
        jEmtratamentoMedicoDescricao.setBackground(Color.white);
        jTSofreAlgumaDoencaDescricao.enable();
        jTSofreAlgumaDoencaDescricao.setBackground(Color.white);
    }

    private void TamanhoDaFonte(int tamanhoFonte) {
            this.tamanhoFonte=tamanhoFonte;
        System.out.println("tam "+tamanhoFonte);
        if((this.tamanhoFonte<24) && (this.tamanhoFonte>15)){
            jBDiminuiTamFOnte.setEnabled(true);
        jBAumentaTamFOnte.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jJaFoiOperadoDescricao.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jJaFoiOperadoDescricao.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jPossuiAlergiaDescricao.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jPossuiAlergiaDescricao.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jUsodeMedicacaoDescricao.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jUsodeMedicacaoDescricao.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jButton1.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jButton2.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jButton3.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jLabel3.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jCEmtratamentoMedico.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jCJafoiOperado.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jCPossuiAlergias.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jCProblemasComHemorragia.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jCSofredoenca.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jCUsodeMedicacao.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jProblemasComCicatrizacao.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jgravidez.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jprobelmasComAnestesia.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        jLabel2.setFont(new Font("Times new Roman", Font.BOLD, tamanhoFonte));
        
        }
          else
            if(this.tamanhoFonte>=24){
                jBAumentaTamFOnte.setEnabled(false);
                jBDiminuiTamFOnte.setEnabled(true);
                
            }
        else
        if(this.tamanhoFonte<=15){
                jBDiminuiTamFOnte.setEnabled(false);
                jBAumentaTamFOnte.setEnabled(true);
                }
    }

    private void ExibeAnamnese() throws ClassNotFoundException, SQLException {
        sctp2.BancodeDados.conexao acesso= new sctp2.BancodeDados.conexao();
        ArrayList<sctp2.ClassesdeControle.Anamnese> ListarPesquisa;
        ListarPesquisa=acesso.ListarAnamnese(rg);
        jPrincipalQueixa.setText(ListarPesquisa.get(0).getPrincipalQueixa());
        if(ListarPesquisa.get(0).isSofreAlgumaDoenca()==true){
            jCSofredoenca.setSelected(true);
        }
        if(ListarPesquisa.get(0).isSofreAlgumaDoenca()==true){
            jCSofredoenca.setSelected(true);
            jTSofreAlgumaDoencaDescricao.setText(ListarPesquisa.get(0).getSofreAlgumaDoencaDescricao());
            jTSofreAlgumaDoencaDescricao.setEnabled(true);
            jTSofreAlgumaDoencaDescricao.setBackground(Color.WHITE);
        }
        if(ListarPesquisa.get(0).isEmTratamentoMedico()==true){
            jCEmtratamentoMedico.setSelected(true);
            jEmtratamentoMedicoDescricao.setText(ListarPesquisa.get(0).getEmTratamentoMedicoDescricao());
            jEmtratamentoMedicoDescricao.setEnabled(true);
            jEmtratamentoMedicoDescricao.setBackground(Color.WHITE);
        }
        if(ListarPesquisa.get(0).isUsoDeAlgumaMedicacao()==true){
            jCUsodeMedicacao.setSelected(true);
            jUsodeMedicacaoDescricao.setText(ListarPesquisa.get(0).getUsoDeAlgumaMedicacaoDescricao());
            jUsodeMedicacaoDescricao.setEnabled(true);
            jUsodeMedicacaoDescricao.setBackground(Color.WHITE);
        }
        if(ListarPesquisa.get(0).isPossuiAlergias()==true){
            jCPossuiAlergias.setSelected(true);
            jPossuiAlergiaDescricao.setText(ListarPesquisa.get(0).getPossuiAlergiasDescricao());
            jPossuiAlergiaDescricao.setEnabled(true);
            jPossuiAlergiaDescricao.setBackground(Color.WHITE);
        }
        if(ListarPesquisa.get(0).isJaFoiOperado()==true){
            jCJafoiOperado.setSelected(true);
            jJaFoiOperadoDescricao.setText(ListarPesquisa.get(0).getJaFoiOperadoDescricao());
            jJaFoiOperadoDescricao.setEnabled(true);
            jJaFoiOperadoDescricao.setBackground(Color.WHITE);
            
        }
        if(ListarPesquisa.get(0).isProblemasComCicatrizacao()==true)jProblemasComCicatrizacao.setSelected(true);
        if(ListarPesquisa.get(0).isGravidez()==true)jgravidez.setSelected(true);
        if(ListarPesquisa.get(0).isProblemasComAnestesia()==true)jprobelmasComAnestesia.setSelected(true);
        if(ListarPesquisa.get(0).isProblemasComHemorragia()==true)jCProblemasComHemorragia.setSelected(true);
        
            
    }
}
